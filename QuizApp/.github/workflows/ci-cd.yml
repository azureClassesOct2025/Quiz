name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  DOTNET_VERSION: '8.0.x'
  DOCKER_IMAGE_NAME: 'quizapp'
  DOCKER_TAG: ${{ github.sha }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore QuizApp.csproj

    - name: Build
      run: dotnet build QuizApp.csproj --configuration Release --no-restore

    - name: Test
      run: dotnet test QuizApp.csproj --configuration Release --no-build --collect:"XPlat Code Coverage" --logger trx --results-directory ./TestResults
      continue-on-error: true

    - name: Publish
      run: dotnet publish QuizApp.csproj --configuration Release --output ./publish --no-build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: ./publish

  docker-build:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: |
        docker build -t ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_TAG }} .
        docker build -t ${{ env.DOCKER_IMAGE_NAME }}:latest .

    - name: Test Docker image
      run: |
        docker run -d -p 8080:80 --name test-container ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_TAG }}
        sleep 10
        curl -f http://localhost:8080 || exit 1
        docker stop test-container
        docker rm test-container

    - name: Login to Docker Hub
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker image
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        docker push ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_TAG }}
        docker push ${{ env.DOCKER_IMAGE_NAME }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: [build-and-test, docker-build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to production
      run: |
        echo "Deployment step would go here"
        echo "Docker image: ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_TAG }}"
